{"uuid":"8bc7a4ef-ca65-4c91-9719-55d360f41b25","historyId":"8f4f92ab5100ba3c73f7c885c0613810","testCaseId":"[engine:junit-jupiter]/[class:com.s2p.services.impl.EnquiryServiceTest]/[method:testUpdateEnquiryByEmail_success()]","testCaseName":"updateEnquiryByEmail() — empty test","fullName":"com.s2p.services.impl.EnquiryServiceTest.testUpdateEnquiryByEmail_success","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.s2p.services.impl.EnquiryServiceTest]/[method:testUpdateEnquiryByEmail_success()]"},{"name":"epic","value":"Enquiry Module"},{"name":"feature","value":"Enquiry Service"},{"name":"story","value":"Enquiry Management"},{"name":"host","value":"HARSH"},{"name":"thread","value":"23812@HARSH.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.s2p.services.impl.EnquiryServiceTest"},{"name":"testClass","value":"com.s2p.services.impl.EnquiryServiceTest"},{"name":"testMethod","value":"testUpdateEnquiryByEmail_success"},{"name":"suite","value":"com.s2p.services.impl.EnquiryServiceTest"}],"links":[],"name":"updateEnquiryByEmail() — empty test","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nMisplaced or misused argument matcher detected here:\n\n-> at com.s2p.services.impl.EnquiryServiceTest.testUpdateEnquiryByEmail_success(EnquiryServiceTest.java:156)\n\nYou cannot use argument matchers outside of verification or stubbing.\nExamples of correct usage of argument matchers:\n    when(mock.get(anyInt())).thenReturn(null);\n    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());\n    verify(mock).someMethod(contains(\"foo\"))\n\nThis message may appear after an NullPointerException if the last matcher is returning an object \nlike any() but the stubbed method signature expect a primitive argument, in this case,\nuse primitive alternatives.\n    when(mock.get(any())); // bad use, will raise NPE\n    when(mock.get(anyInt())); // correct usage use\n\nAlso, this error might show up because you use argument matchers with methods that cannot be mocked.\nFollowing methods *cannot* be stubbed/verified: final/private/equals()/hashCode().\nMocking methods declared on non-public parent classes is not supported.\n","trace":"org.mockito.exceptions.misusing.InvalidUseOfMatchersException: \nMisplaced or misused argument matcher detected here:\n\n-> at com.s2p.services.impl.EnquiryServiceTest.testUpdateEnquiryByEmail_success(EnquiryServiceTest.java:156)\n\nYou cannot use argument matchers outside of verification or stubbing.\nExamples of correct usage of argument matchers:\n    when(mock.get(anyInt())).thenReturn(null);\n    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());\n    verify(mock).someMethod(contains(\"foo\"))\n\nThis message may appear after an NullPointerException if the last matcher is returning an object \nlike any() but the stubbed method signature expect a primitive argument, in this case,\nuse primitive alternatives.\n    when(mock.get(any())); // bad use, will raise NPE\n    when(mock.get(anyInt())); // correct usage use\n\nAlso, this error might show up because you use argument matchers with methods that cannot be mocked.\nFollowing methods *cannot* be stubbed/verified: final/private/equals()/hashCode().\nMocking methods declared on non-public parent classes is not supported.\n\r\n\tat com.s2p.services.impl.EnquiryServiceTest.testUpdateEnquiryByEmail_success(EnquiryServiceTest.java:156)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n"},"stage":"finished","description":"Placeholder test for EnquiryService.updateEnquiryByEmail(String, EnquiryDto)","steps":[],"attachments":[],"parameters":[],"start":1756722426527,"stop":1756722426560}